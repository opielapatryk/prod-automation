# Generated by Django 5.1.7 on 2025-04-09 13:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=50, unique=True)),
                ('model', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('operational', 'Operational'), ('warning', 'Warning'), ('critical', 'Critical'), ('offline', 'Offline'), ('maintenance', 'Under Maintenance')], default='operational', max_length=20)),
                ('installation_date', models.DateField()),
                ('last_maintenance_date', models.DateField(blank=True, null=True)),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='machines', to='collector.location')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('estimated_duration', models.FloatField(help_text='Estimated duration in hours')),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('start_location', models.CharField(default='Warsaw, Poland', max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RouteStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('estimated_service_time', models.FloatField(default=1.0, help_text='Estimated service time in hours')),
                ('completed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collector.machine')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collector.route')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('route', 'order')},
            },
        ),
        migrations.AddField(
            model_name='route',
            name='machines',
            field=models.ManyToManyField(through='collector.RouteStop', to='collector.machine'),
        ),
        migrations.CreateModel(
            name='Telemetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('parameter', models.CharField(max_length=50)),
                ('value', models.FloatField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telemetry', to='collector.machine')),
            ],
            options={
                'verbose_name_plural': 'Telemetry',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Warning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warnings', to='collector.machine')),
                ('telemetry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='collector.telemetry')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_date', models.DateTimeField()),
                ('description', models.TextField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_records', to='collector.machine')),
                ('technician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('resolved_warnings', models.ManyToManyField(blank=True, to='collector.warning')),
            ],
        ),
        migrations.CreateModel(
            name='WarningRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parameter', models.CharField(max_length=50)),
                ('comparison_operator', models.CharField(choices=[('>', 'Greater Than'), ('>=', 'Greater Than or Equal'), ('<', 'Less Than'), ('<=', 'Less Than or Equal'), ('==', 'Equal'), ('!=', 'Not Equal')], max_length=2)),
                ('threshold_value', models.FloatField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='warning',
            name='rule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='collector.warningrule'),
        ),
    ]
